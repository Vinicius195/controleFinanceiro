// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Provides financial recommendations based on revenue and expense data.
 *
 * - getFinancialRecommendations - A function that takes revenue and expense data and returns financial recommendations.
 * - FinancialRecommendationsInput - The input type for the getFinancialRecommendations function.
 * - FinancialRecommendationsOutput - The return type for the getFinancialRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const FinancialRecommendationsInputSchema = z.object({
  revenue: z
    .number()
    .describe('Total revenue from all sales channels in USD.'),
  expenses: z.number().describe('Total expenses including ingredients, wages, and rent in USD.'),
  ingredientCosts: z.number().describe('Total cost of ingredients in USD.'),
  wageCosts: z.number().describe('Total wage costs in USD.'),
  rentCosts: z.number().describe('Total rent costs in USD.'),
  pricingStrategy: z
    .string()
    .describe(
      'Current pricing strategy for pizzas, including average price per pizza and any discounts offered.'
    ),
});
export type FinancialRecommendationsInput = z.infer<typeof FinancialRecommendationsInputSchema>;

const FinancialRecommendationsOutputSchema = z.object({
  recommendations: z.string().describe('AI-generated recommendations to improve profitability.'),
});
export type FinancialRecommendationsOutput = z.infer<typeof FinancialRecommendationsOutputSchema>;

export async function getFinancialRecommendations(
  input: FinancialRecommendationsInput
): Promise<FinancialRecommendationsOutput> {
  return financialRecommendationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'financialRecommendationsPrompt',
  input: {schema: FinancialRecommendationsInputSchema},
  output: {schema: FinancialRecommendationsOutputSchema},
  prompt: `You are a financial advisor for a pizzeria. Analyze the revenue and expense data provided to offer actionable recommendations to improve profitability.

Revenue: {{{revenue}}} USD
Expenses: {{{expenses}}} USD
Ingredient Costs: {{{ingredientCosts}}} USD
Wage Costs: {{{wageCosts}}} USD
Rent Costs: {{{rentCosts}}} USD
Pricing Strategy: {{{pricingStrategy}}}

Based on this information, provide recommendations on cost adjustments or pricing strategies to improve profitability.
Give concrete examples of changes that could be made.
`, safetySettings: [
    {
      category: 'HARM_CATEGORY_HATE_SPEECH',
      threshold: 'BLOCK_ONLY_HIGH',
    },
    {
      category: 'HARM_CATEGORY_DANGEROUS_CONTENT',
      threshold: 'BLOCK_NONE',
    },
    {
      category: 'HARM_CATEGORY_HARASSMENT',
      threshold: 'BLOCK_MEDIUM_AND_ABOVE',
    },
    {
      category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT',
      threshold: 'BLOCK_LOW_AND_ABOVE',
    },
  ],
});

const financialRecommendationsFlow = ai.defineFlow(
  {
    name: 'financialRecommendationsFlow',
    inputSchema: FinancialRecommendationsInputSchema,
    outputSchema: FinancialRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
