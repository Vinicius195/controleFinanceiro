// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Fornece recomendações financeiras com base em dados de receitas e despesas.
 *
 * - getFinancialRecommendations - Uma função que recebe dados de receitas e despesas e retorna recomendações financeiras.
 * - FinancialRecommendationsInput - O tipo de entrada para a função getFinancialRecommendations.
 * - FinancialRecommendationsOutput - O tipo de retorno para a função getFinancialRecommendations.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const FinancialRecommendationsInputSchema = z.object({
  revenue: z
    .number()
    .describe('Receita total de todos os canais de venda em BRL.'),
  expenses: z.number().describe('Despesas totais, incluindo ingredientes, salários e aluguel em BRL.'),
  ingredientCosts: z.number().describe('Custo total dos ingredientes em BRL.'),
  wageCosts: z.number().describe('Custo total com salários em BRL.'),
  rentCosts: z.number().describe('Custo total do aluguel em BRL.'),
  pricingStrategy: z
    .string()
    .describe(
      'Estratégia de preços atual para as pizzas, incluindo preço médio por pizza e descontos oferecidos.'
    ),
});
export type FinancialRecommendationsInput = z.infer<typeof FinancialRecommendationsInputSchema>;

const FinancialRecommendationsOutputSchema = z.object({
  recommendations: z.string().describe('Recomendações geradas por IA para melhorar a lucratividade.'),
});
export type FinancialRecommendationsOutput = z.infer<typeof FinancialRecommendationsOutputSchema>;

export async function getFinancialRecommendations(
  input: FinancialRecommendationsInput
): Promise<FinancialRecommendationsOutput> {
  return financialRecommendationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'financialRecommendationsPrompt',
  input: {schema: FinancialRecommendationsInputSchema},
  output: {schema: FinancialRecommendationsOutputSchema},
  prompt: `Você é um consultor financeiro para uma pizzaria. Analise os dados de receita e despesas fornecidos para oferecer recomendações práticas para melhorar a lucratividade.

Receita: {{{revenue}}} BRL
Despesas: {{{expenses}}} BRL
Custos de Ingredientes: {{{ingredientCosts}}} BRL
Custos com Salários: {{{wageCosts}}} BRL
Custos com Aluguel: {{{rentCosts}}} BRL
Estratégia de Preços: {{{pricingStrategy}}}

Com base nessas informações, forneça recomendações sobre ajustes de custos ou estratégias de preços para melhorar a lucratividade.
Dê exemplos concretos de mudanças que podem ser feitas.
Responda em português do Brasil.
`, safetySettings: [
    {
      category: 'HARM_CATEGORY_HATE_SPEECH',
      threshold: 'BLOCK_ONLY_HIGH',
    },
    {
      category: 'HARM_CATEGORY_DANGEROUS_CONTENT',
      threshold: 'BLOCK_NONE',
    },
    {
      category: 'HARM_CATEGORY_HARASSMENT',
      threshold: 'BLOCK_MEDIUM_AND_ABOVE',
    },
    {
      category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT',
      threshold: 'BLOCK_LOW_AND_ABOVE',
    },
  ],
});

const financialRecommendationsFlow = ai.defineFlow(
  {
    name: 'financialRecommendationsFlow',
    inputSchema: FinancialRecommendationsInputSchema,
    outputSchema: FinancialRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
